{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"../styles/Assignments.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Assignments=()=>{const[assignments,setAssignments]=useState([]);const[patients,setPatients]=useState([]);const[caregivers,setCaregivers]=useState([]);useEffect(()=>{Promise.all([fetch(\"http://localhost:1000/assignments\").then(res=>res.json()),fetch(\"http://localhost:1000/patients\").then(res=>res.json()),fetch(\"http://localhost:1000/caregivers\").then(res=>res.json())]).then(_ref=>{let[assignmentsData,patientsData,caregiversData]=_ref;setAssignments(assignmentsData);setPatients(patientsData);setCaregivers(caregiversData);});},[]);const getPatientName=id=>{var _patients$find;return((_patients$find=patients.find(p=>p.id===id))===null||_patients$find===void 0?void 0:_patients$find.name)||\"Unknown\";};const getCaregiverName=id=>{var _caregivers$find;return((_caregivers$find=caregivers.find(c=>c.id===id))===null||_caregivers$find===void 0?void 0:_caregivers$find.name)||\"Unknown\";};return/*#__PURE__*/_jsxs(\"div\",{className:\"assignments\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Caregiver Assignments\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Patient\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Caregiver\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:assignments.map(assignment=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:getPatientName(assignment.patientId)}),/*#__PURE__*/_jsx(\"td\",{children:getCaregiverName(assignment.caregiverId)})]},assignment.id))})]})]});};export default Assignments;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Assignments","assignments","setAssignments","patients","setPatients","caregivers","setCaregivers","Promise","all","fetch","then","res","json","_ref","assignmentsData","patientsData","caregiversData","getPatientName","id","_patients$find","find","p","name","getCaregiverName","_caregivers$find","c","className","children","map","assignment","patientId","caregiverId"],"sources":["D:/Jagruti/Priya Assignment/health care/src/components/Assignments.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/Assignments.css\";\r\n\r\nconst Assignments = () => {\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [caregivers, setCaregivers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      fetch(\"http://localhost:1000/assignments\").then((res) => res.json()),\r\n      fetch(\"http://localhost:1000/patients\").then((res) => res.json()),\r\n      fetch(\"http://localhost:1000/caregivers\").then((res) => res.json()),\r\n    ]).then(([assignmentsData, patientsData, caregiversData]) => {\r\n      setAssignments(assignmentsData);\r\n      setPatients(patientsData);\r\n      setCaregivers(caregiversData);\r\n    });\r\n  }, []);\r\n\r\n  const getPatientName = (id) => patients.find((p) => p.id === id)?.name || \"Unknown\";\r\n  const getCaregiverName = (id) => caregivers.find((c) => c.id === id)?.name || \"Unknown\";\r\n\r\n  return (\r\n    <div className=\"assignments\">\r\n      <h2>Caregiver Assignments</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Patient</th>\r\n            <th>Caregiver</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {assignments.map((assignment) => (\r\n            <tr key={assignment.id}>\r\n              <td>{getPatientName(assignment.patientId)}</td>\r\n              <td>{getCaregiverName(assignment.caregiverId)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assignments;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEhDC,SAAS,CAAC,IAAM,CACdY,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACpEH,KAAK,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACjEH,KAAK,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACpE,CAAC,CAACF,IAAI,CAACG,IAAA,EAAqD,IAApD,CAACC,eAAe,CAAEC,YAAY,CAAEC,cAAc,CAAC,CAAAH,IAAA,CACtDX,cAAc,CAACY,eAAe,CAAC,CAC/BV,WAAW,CAACW,YAAY,CAAC,CACzBT,aAAa,CAACU,cAAc,CAAC,CAC/B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,cAAc,CAAIC,EAAE,OAAAC,cAAA,OAAK,EAAAA,cAAA,CAAAhB,QAAQ,CAACiB,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACH,EAAE,GAAKA,EAAE,CAAC,UAAAC,cAAA,iBAAjCA,cAAA,CAAmCG,IAAI,GAAI,SAAS,GACnF,KAAM,CAAAC,gBAAgB,CAAIL,EAAE,OAAAM,gBAAA,OAAK,EAAAA,gBAAA,CAAAnB,UAAU,CAACe,IAAI,CAAEK,CAAC,EAAKA,CAAC,CAACP,EAAE,GAAKA,EAAE,CAAC,UAAAM,gBAAA,iBAAnCA,gBAAA,CAAqCF,IAAI,GAAI,SAAS,GAEvF,mBACEvB,KAAA,QAAK2B,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B9B,IAAA,OAAA8B,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9B5B,KAAA,UAAA4B,QAAA,eACE9B,IAAA,UAAA8B,QAAA,cACE5B,KAAA,OAAA4B,QAAA,eACE9B,IAAA,OAAA8B,QAAA,CAAI,SAAO,CAAI,CAAC,cAChB9B,IAAA,OAAA8B,QAAA,CAAI,WAAS,CAAI,CAAC,EAChB,CAAC,CACA,CAAC,cACR9B,IAAA,UAAA8B,QAAA,CACG1B,WAAW,CAAC2B,GAAG,CAAEC,UAAU,eAC1B9B,KAAA,OAAA4B,QAAA,eACE9B,IAAA,OAAA8B,QAAA,CAAKV,cAAc,CAACY,UAAU,CAACC,SAAS,CAAC,CAAK,CAAC,cAC/CjC,IAAA,OAAA8B,QAAA,CAAKJ,gBAAgB,CAACM,UAAU,CAACE,WAAW,CAAC,CAAK,CAAC,GAF5CF,UAAU,CAACX,EAGhB,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}